

on :
  workflow_call :
    inputs :
      label : 
        required : true
        type     : string
      hpc-workflows_path :
        required : true
        type     : string
      archive :
        required : true
        type     : string
      
      name     :
        required : true
        type     : string
      id       :
        required : true
        type     : string
      host     :
        required : true
        type     : string
      config :
        required : true
        type     : string
      account  :
        required : true
        type     : string
      tests    :
        required : true
        type     : string
      mkdirs   :
        required : true
        type     : boolean
      args     :
        required : false
        type     : string
        default  : ""
      pool     :
        required : false
        type     : number
        default  : 1
      tpool      :
        required : false
        type     : number
        default  : 1
      


jobs:
  test_workflow :

    # Is 5 days a reasonable wait time for testing?
    timeout-minutes: 7200
    name: Test ${{ inputs.name }} on ${{ inputs.host }}
    runs-on: self-hosted
    env :
      LOG_SUFFIX : ${{ github.event_name == 'push' && 'master' || github.event.number }}
    steps:
    - uses: actions/checkout@v4
      with:
        path      : main
        submodules: true
        fetch-tags: true
        fetch-depth: 50
    
    - name: Get fileroot of test config
      id: get_fileroot
      run: |
        filename=$( basename ${{ inputs.config }} )
        echo "rel_dir=$( dirname ${{ inputs.config }} )" >> "$GITHUB_ENV"
        echo "fileroot=${filename%.*}" >> "$GITHUB_ENV"
    
    # Immediately copy out to # of tests to do
    - name: Create testing directories
      if  : ${{ inputs.mkdirs }}
      id  : cpTestDirs
      run : |
        # Limit parallel ops to 4 at a time to not thrash login nodes

        # Remove if it exists to get a fresh start
        echo "Cleaning old test directories..."
        tests="${{ join( fromJson( inputs.tests ), ' ' ) }}"
        time printf "%s\n" $tests | xargs -i -P 4 rm -rf {}

        echo "Creating duplicate directory for $tests"
        time printf "%s\n" $tests | xargs -i -P 4 cp -Rp main/ {}

    - name: Test ${{ inputs.name }}
      id  : runTest
      run: |
        if [ "${{ inputs.mkdirs }}" = "true" ]; then
          ALT_DIRS="-alt ../${{ join( fromJson( inputs.tests ), format( '/{0} ../', env.rel_dir ) ) }}/$rel_dir"
        fi
        ./main/${{ inputs.hpc-workflows_path }}/.ci/runner.py                   \
          ./main/${{ inputs.config }}             \
          -t   ${{ join( fromJson( inputs.tests ), ' ' ) }}  \
          -a "${{ inputs.account }}"                         \
          -p ${{ inputs.pool}} -tp ${{ inputs.tpool }}       \
          -jn ${{ github.event_name == 'push' && github.ref_name || format( 'pr{0}', github.event.number ) }}-${{ inputs.id }} \
          ${{ inputs.args }} $ALT_DIRS


    - name: Report failed tests and steps
      if : ${{ failure() }}
      run : |
        # move log files to safe location
        ./main/${{ inputs.hpc-workflows_path }}/.ci/relocator.py ./main/$rel_dir/$fileroot.log ${{ inputs.archive }}/$LOG_SUFFIX/${{ inputs.id }}

        # report on them - alt dirs need extra help
        if [ "${{ inputs.mkdirs }}" = "true" ]; then
          masterlogLoc=main/$rel_dir
        fi
        ./main/.ci/reporter.py ${{ inputs.archive }}/$LOG_SUFFIX/${{ inputs.id }}/$masterlogLoc/$fileroot.log \
                                             -e ./${{ inputs.hpc-workflows_path }}/.ci/runner.py                             \
                                             -o GITHUB -m # only mark fail steps with gh syntax
        
        # report on them
        
        echo "# Summary for ${{ join( fromJson( inputs.tests ), ' ' ) }}" >> $GITHUB_STEP_SUMMARY

        GITHUB_STEP_SUMMARY=$( ./main/.ci/reporter.py ${{ inputs.archive }}/$LOG_SUFFIX/${{ inputs.id }}/$masterlogLoc/$fileroot.log \
                                             -e ./${{ inputs.hpc-workflows_path }}/.ci/runner.py  -s )

        echo " --------- GITHUB_STEP_SUMMARY: $GITHUB_STEP_SUMMARY"

    - name: Generate list using Markdown
      run: |
        echo "This is the lead in sentence for the list" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
        echo "- Lets add a bullet point" >> $GITHUB_STEP_SUMMARY
        echo "- Lets add a second bullet point" >> $GITHUB_STEP_SUMMARY
        echo "- How about a third one?" >> $GITHUB_STEP_SUMMARY

    - name: Clean up testing directories
      if : ${{ success() }}
      id  : rmTestDirs
      run : |
        for testDir in ${{ join( fromJson( inputs.tests ), ' ' ) }}; do
          echo "Removing duplicate directory for $testDir"
          rm -rf $testDir
        done
    
    - name: Upload test logs
      if  : ${{ failure() }}
      uses : actions/upload-artifact@v4
      with:
        # as per usual with ci/cd stuff I am shocked but not surprised when the advertised
        # *documented* functionality doesn't work as expected. Wow, bravo
        # can't use ${{ env. }} as somehow this combination of matrix->reusable workflow->call step is too complex
        # and expands to nothing
        name: ${{ github.event_name == 'push' && github.ref_name || github.event.number }}-${{ inputs.id }}_logfiles
        path: ${{ inputs.archive }}/${{ github.event_name == 'push' && github.ref_name || github.event.number }}/${{ inputs.id }}/

    # As noted in ci.yml, this will need to be moved to a separate workflow with pull_request_target
    # and strictly controlled usage of the GH token
    # - name : Remove '${{ inputs.label }}' label
    #   if : ${{ !cancelled() && github.event.label.name == inputs.label }}
    #   env:
    #     PR_NUMBER: ${{ github.event.number }}
    #   run: |
    #     curl \
    #       -X DELETE \
    #       -H "Accept: application/vnd.github.v3+json" \
    #       -H 'Authorization: token ${{ github.token }}' \
    #       https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${PR_NUMBER}/labels/${{ inputs.label }}
    


  
